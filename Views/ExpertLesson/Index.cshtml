@using TutoSearch.Data.Static;
@model IEnumerable<ExpertLesson>

@{
    ViewData["Title"] = "List Of expertLessons";
}

<div class="container-fluid mt-3" style="max-width: 1120px;">
    <div class="row">
        @foreach (var expertLesson in Model)
        {
            <div class="col-md-4">
                <div class="card mb-3" style="width: 350px;">
                    <div class="d-flex justify-content-center align-items-center m-2">
                        <video controls preload="auto" style="max-width: 300px; max-height: 150px; border-radius: 5%;">
                            <source src="@expertLesson.VideoURL">
                        </video>
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">
                            @if (expertLesson.Title.Length <= 32)
                            {
                                @expertLesson.Title.ToUpperInvariant()
                            }
                            else
                            {
                                @expertLesson.Title.Substring(0, 32).ToUpperInvariant()
                            }
                            ...
                        </h5>
                        <p class="card-text">
                            <b>Descripción: </b>
                            @if (expertLesson.Description.Length <= 55)
                            {
                                @expertLesson.Description
                            }
                            else
                            {
                                @expertLesson.Description.Substring(0, 55)
                            }
                            ...
                        </p>
                        <p class="card-text"><b>Profesor: </b>@expertLesson.Professor?.FullName</p>
                        <p class="card-text"><b>Precio: </b>@expertLesson.Price</p>
                        <div class="d-flex justify-content-center">
                            <a class="btn btn-success"><i class="fa-solid fa-cart-shopping"></i> Añadir al Carrito</a>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="d-flex justify-content-around">
                            @if (User.Identity.IsAuthenticated && User.IsInRole(UserRoles.Admin))
                            {
                                <a asp-action="Edit" asp-route-id="@expertLesson.Id"><i class="fa-solid fa-pen-to-square" id="edit-icon"></i></a>
                            }
                            <a asp-action="Details" asp-route-id="@expertLesson.Id"><i class="fa-solid fa-circle-info" id="info-icon"></i></a>
                            @if (User.Identity.IsAuthenticated && User.IsInRole(UserRoles.Admin))
                            {
                                <a asp-action="Delete" asp-route-id="@expertLesson.Id"><i class="fa-solid fa-trash-can" id="delete-icon"></i></a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@if (User.Identity.IsAuthenticated && User.IsInRole(UserRoles.Admin))
{
    <div class="d-flex justify-content-end align-items-lg-end" style="position:fixed; right:20px; bottom: 15px;">
        <a asp-action="Create" class="btn btn-outline-success">
            <i class="fa-solid fa-circle-plus"></i> Añadir Nuevo
        </a>
    </div>
}